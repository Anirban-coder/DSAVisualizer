{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\anirb\\\\Downloads\\\\dsa-visualizer\\\\src\\\\components\\\\TreeVisualizer.jsx\",\n  _s = $RefreshSig$();\nimport React, { useState } from \"react\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction TreeNode(val) {\n  this.val = val;\n  this.left = null;\n  this.right = null;\n}\n_c = TreeNode;\nconst TreeVisualizer = () => {\n  _s();\n  const [root, setRoot] = useState(null);\n  const [value, setValue] = useState(\"\");\n  const insert = (node, val) => {\n    if (!node) return new TreeNode(val);\n    if (val < node.val) {\n      node.left = insert(node.left, val);\n    } else {\n      node.right = insert(node.right, val);\n    }\n    return node;\n  };\n  const handleInsert = () => {\n    if (!value) return;\n    const num = parseInt(value);\n    if (isNaN(num)) {\n      alert(\"Please enter a number\");\n      return;\n    }\n    const newRoot = insert(root, num);\n    setRoot({\n      ...newRoot\n    }); // trigger re-render\n    setValue(\"\");\n  };\n  const renderTree = node => {\n    if (!node) return null;\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"flex flex-col items-center\",\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"bg-blue-600 text-white px-4 py-2 rounded mb-2\",\n        children: node.val\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 39,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"flex gap-4\",\n        children: [renderTree(node.left), renderTree(node.right)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 40,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 38,\n      columnNumber: 7\n    }, this);\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"bg-gray-800 p-6 rounded shadow-lg w-full max-w-xl text-center text-white\",\n    children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n      className: \"text-2xl font-bold mb-4\",\n      children: \"Binary Tree Visualizer\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 50,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"flex justify-center items-center gap-2 mb-4\",\n      children: [/*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"text\",\n        value: value,\n        onChange: e => setValue(e.target.value),\n        placeholder: \"Enter value\",\n        className: \"px-2 py-1 rounded text-black\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 52,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: handleInsert,\n        className: \"bg-green-600 px-4 py-2 rounded hover:bg-green-700\",\n        children: \"Insert\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 59,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 51,\n      columnNumber: 7\n    }, this), renderTree(root)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 49,\n    columnNumber: 5\n  }, this);\n};\n_s(TreeVisualizer, \"QzXR8Oy1/AHGhw2GWK4+4CvXaKk=\");\n_c2 = TreeVisualizer;\nexport default TreeVisualizer;\nvar _c, _c2;\n$RefreshReg$(_c, \"TreeNode\");\n$RefreshReg$(_c2, \"TreeVisualizer\");","map":{"version":3,"names":["React","useState","jsxDEV","_jsxDEV","TreeNode","val","left","right","_c","TreeVisualizer","_s","root","setRoot","value","setValue","insert","node","handleInsert","num","parseInt","isNaN","alert","newRoot","renderTree","className","children","fileName","_jsxFileName","lineNumber","columnNumber","type","onChange","e","target","placeholder","onClick","_c2","$RefreshReg$"],"sources":["C:/Users/anirb/Downloads/dsa-visualizer/src/components/TreeVisualizer.jsx"],"sourcesContent":["import React, { useState } from \"react\";\r\n\r\nfunction TreeNode(val) {\r\n  this.val = val;\r\n  this.left = null;\r\n  this.right = null;\r\n}\r\n\r\nconst TreeVisualizer = () => {\r\n  const [root, setRoot] = useState(null);\r\n  const [value, setValue] = useState(\"\");\r\n\r\n  const insert = (node, val) => {\r\n    if (!node) return new TreeNode(val);\r\n    if (val < node.val) {\r\n      node.left = insert(node.left, val);\r\n    } else {\r\n      node.right = insert(node.right, val);\r\n    }\r\n    return node;\r\n  };\r\n\r\n  const handleInsert = () => {\r\n    if (!value) return;\r\n    const num = parseInt(value);\r\n    if (isNaN(num)) {\r\n      alert(\"Please enter a number\");\r\n      return;\r\n    }\r\n    const newRoot = insert(root, num);\r\n    setRoot({ ...newRoot }); // trigger re-render\r\n    setValue(\"\");\r\n  };\r\n\r\n  const renderTree = (node) => {\r\n    if (!node) return null;\r\n    return (\r\n      <div className=\"flex flex-col items-center\">\r\n        <div className=\"bg-blue-600 text-white px-4 py-2 rounded mb-2\">{node.val}</div>\r\n        <div className=\"flex gap-4\">\r\n          {renderTree(node.left)}\r\n          {renderTree(node.right)}\r\n        </div>\r\n      </div>\r\n    );\r\n  };\r\n\r\n  return (\r\n    <div className=\"bg-gray-800 p-6 rounded shadow-lg w-full max-w-xl text-center text-white\">\r\n      <h2 className=\"text-2xl font-bold mb-4\">Binary Tree Visualizer</h2>\r\n      <div className=\"flex justify-center items-center gap-2 mb-4\">\r\n        <input\r\n          type=\"text\"\r\n          value={value}\r\n          onChange={(e) => setValue(e.target.value)}\r\n          placeholder=\"Enter value\"\r\n          className=\"px-2 py-1 rounded text-black\"\r\n        />\r\n        <button\r\n          onClick={handleInsert}\r\n          className=\"bg-green-600 px-4 py-2 rounded hover:bg-green-700\"\r\n        >\r\n          Insert\r\n        </button>\r\n      </div>\r\n      {renderTree(root)}\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default TreeVisualizer;\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}
{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\anirb\\\\Downloads\\\\dsa-visualizer\\\\src\\\\components\\\\TrieVisualizer.jsx\",\n  _s = $RefreshSig$();\nimport React, { useState } from \"react\";\nimport { motion } from \"framer-motion\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nclass TrieNode {\n  constructor(char) {\n    this.char = char;\n    this.children = {};\n    this.isEndOfWord = false;\n    this.id = Math.random().toString(36).substr(2, 9);\n  }\n}\nclass Trie {\n  constructor() {\n    this.root = new TrieNode(\"\");\n  }\n  insert(word) {\n    let node = this.root;\n    for (let char of word) {\n      if (!node.children[char]) {\n        node.children[char] = new TrieNode(char);\n      }\n      node = node.children[char];\n    }\n    node.isEndOfWord = true;\n  }\n  search(word) {\n    let node = this.root;\n    const path = [];\n    for (let char of word) {\n      if (!node.children[char]) return {\n        found: false,\n        path\n      };\n      node = node.children[char];\n      path.push(node.id);\n    }\n    return {\n      found: node.isEndOfWord,\n      path\n    };\n  }\n}\nconst trie = new Trie();\nconst TrieVisualizer = () => {\n  _s();\n  const [insertWord, setInsertWord] = useState(\"\");\n  const [searchWord, setSearchWord] = useState(\"\");\n  const [highlightPath, setHighlightPath] = useState([]);\n  const [result, setResult] = useState(null);\n  const [_, forceRender] = useState({});\n  const handleInsert = () => {\n    if (!insertWord) return;\n    trie.insert(insertWord.toLowerCase());\n    setInsertWord(\"\");\n    forceRender({}); // re-render tree\n  };\n  const handleSearch = () => {\n    const res = trie.search(searchWord.toLowerCase());\n    setHighlightPath(res.path);\n    setResult(res.found);\n    setTimeout(() => setHighlightPath([]), 2000); // reset highlight after 2s\n  };\n  const renderTrie = node => {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"flex flex-col items-center\",\n      children: [/*#__PURE__*/_jsxDEV(motion.div, {\n        layout: true,\n        className: `rounded-full px-3 py-2 m-1 text-white font-bold ${highlightPath.includes(node.id) ? \"bg-yellow-500\" : \"bg-blue-600\"}`,\n        children: node.char || \"Root\"\n      }, node.id, false, {\n        fileName: _jsxFileName,\n        lineNumber: 67,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"flex\",\n        children: Object.values(node.children).map(child => /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"flex flex-col items-center mx-2\",\n          children: [/*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"h-4 w-0.5 bg-white\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 79,\n            columnNumber: 15\n          }, this), renderTrie(child)]\n        }, child.id, true, {\n          fileName: _jsxFileName,\n          lineNumber: 78,\n          columnNumber: 13\n        }, this))\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 76,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 66,\n      columnNumber: 7\n    }, this);\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"bg-gray-900 text-white p-6 rounded-xl shadow-xl w-full max-w-6xl\",\n    children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n      className: \"text-3xl font-bold mb-4 text-center\",\n      children: \"Trie Visualizer\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 90,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"flex gap-4 flex-wrap justify-center mb-6\",\n      children: [/*#__PURE__*/_jsxDEV(\"input\", {\n        value: insertWord,\n        onChange: e => setInsertWord(e.target.value),\n        placeholder: \"Insert word\",\n        className: \"text-black px-3 py-1 rounded\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 93,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: handleInsert,\n        className: \"bg-green-600 px-4 py-2 rounded hover:bg-green-700\",\n        children: \"Insert\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 99,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        value: searchWord,\n        onChange: e => setSearchWord(e.target.value),\n        placeholder: \"Search word\",\n        className: \"text-black px-3 py-1 rounded\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 106,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: handleSearch,\n        className: \"bg-yellow-600 px-4 py-2 rounded hover:bg-yellow-700\",\n        children: \"Search\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 112,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 92,\n      columnNumber: 7\n    }, this), result !== null && /*#__PURE__*/_jsxDEV(\"div\", {\n      className: `text-center mb-4 font-semibold text-lg ${result ? \"text-green-400\" : \"text-red-400\"}`,\n      children: result ? \"Word Found!\" : \"Word Not Found!\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 121,\n      columnNumber: 9\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"overflow-auto flex justify-center\",\n      children: renderTrie(trie.root)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 126,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 89,\n    columnNumber: 5\n  }, this);\n};\n_s(TrieVisualizer, \"s/LSakh7YK0PrIwq2iLbKMeWxOw=\");\n_c = TrieVisualizer;\nexport default TrieVisualizer;\nvar _c;\n$RefreshReg$(_c, \"TrieVisualizer\");","map":{"version":3,"names":["React","useState","motion","jsxDEV","_jsxDEV","TrieNode","constructor","char","children","isEndOfWord","id","Math","random","toString","substr","Trie","root","insert","word","node","search","path","found","push","trie","TrieVisualizer","_s","insertWord","setInsertWord","searchWord","setSearchWord","highlightPath","setHighlightPath","result","setResult","_","forceRender","handleInsert","toLowerCase","handleSearch","res","setTimeout","renderTrie","className","div","layout","includes","fileName","_jsxFileName","lineNumber","columnNumber","Object","values","map","child","value","onChange","e","target","placeholder","onClick","_c","$RefreshReg$"],"sources":["C:/Users/anirb/Downloads/dsa-visualizer/src/components/TrieVisualizer.jsx"],"sourcesContent":["import React, { useState } from \"react\";\r\nimport { motion } from \"framer-motion\";\r\n\r\nclass TrieNode {\r\n  constructor(char) {\r\n    this.char = char;\r\n    this.children = {};\r\n    this.isEndOfWord = false;\r\n    this.id = Math.random().toString(36).substr(2, 9);\r\n  }\r\n}\r\n\r\nclass Trie {\r\n  constructor() {\r\n    this.root = new TrieNode(\"\");\r\n  }\r\n\r\n  insert(word) {\r\n    let node = this.root;\r\n    for (let char of word) {\r\n      if (!node.children[char]) {\r\n        node.children[char] = new TrieNode(char);\r\n      }\r\n      node = node.children[char];\r\n    }\r\n    node.isEndOfWord = true;\r\n  }\r\n\r\n  search(word) {\r\n    let node = this.root;\r\n    const path = [];\r\n    for (let char of word) {\r\n      if (!node.children[char]) return { found: false, path };\r\n      node = node.children[char];\r\n      path.push(node.id);\r\n    }\r\n    return { found: node.isEndOfWord, path };\r\n  }\r\n}\r\n\r\nconst trie = new Trie();\r\n\r\nconst TrieVisualizer = () => {\r\n  const [insertWord, setInsertWord] = useState(\"\");\r\n  const [searchWord, setSearchWord] = useState(\"\");\r\n  const [highlightPath, setHighlightPath] = useState([]);\r\n  const [result, setResult] = useState(null);\r\n  const [_, forceRender] = useState({});\r\n\r\n  const handleInsert = () => {\r\n    if (!insertWord) return;\r\n    trie.insert(insertWord.toLowerCase());\r\n    setInsertWord(\"\");\r\n    forceRender({}); // re-render tree\r\n  };\r\n\r\n  const handleSearch = () => {\r\n    const res = trie.search(searchWord.toLowerCase());\r\n    setHighlightPath(res.path);\r\n    setResult(res.found);\r\n    setTimeout(() => setHighlightPath([]), 2000); // reset highlight after 2s\r\n  };\r\n\r\n  const renderTrie = (node) => {\r\n    return (\r\n      <div className=\"flex flex-col items-center\">\r\n        <motion.div\r\n          layout\r\n          key={node.id}\r\n          className={`rounded-full px-3 py-2 m-1 text-white font-bold ${\r\n            highlightPath.includes(node.id) ? \"bg-yellow-500\" : \"bg-blue-600\"\r\n          }`}\r\n        >\r\n          {node.char || \"Root\"}\r\n        </motion.div>\r\n        <div className=\"flex\">\r\n          {Object.values(node.children).map((child) => (\r\n            <div key={child.id} className=\"flex flex-col items-center mx-2\">\r\n              <div className=\"h-4 w-0.5 bg-white\" />\r\n              {renderTrie(child)}\r\n            </div>\r\n          ))}\r\n        </div>\r\n      </div>\r\n    );\r\n  };\r\n\r\n  return (\r\n    <div className=\"bg-gray-900 text-white p-6 rounded-xl shadow-xl w-full max-w-6xl\">\r\n      <h2 className=\"text-3xl font-bold mb-4 text-center\">Trie Visualizer</h2>\r\n\r\n      <div className=\"flex gap-4 flex-wrap justify-center mb-6\">\r\n        <input\r\n          value={insertWord}\r\n          onChange={(e) => setInsertWord(e.target.value)}\r\n          placeholder=\"Insert word\"\r\n          className=\"text-black px-3 py-1 rounded\"\r\n        />\r\n        <button\r\n          onClick={handleInsert}\r\n          className=\"bg-green-600 px-4 py-2 rounded hover:bg-green-700\"\r\n        >\r\n          Insert\r\n        </button>\r\n\r\n        <input\r\n          value={searchWord}\r\n          onChange={(e) => setSearchWord(e.target.value)}\r\n          placeholder=\"Search word\"\r\n          className=\"text-black px-3 py-1 rounded\"\r\n        />\r\n        <button\r\n          onClick={handleSearch}\r\n          className=\"bg-yellow-600 px-4 py-2 rounded hover:bg-yellow-700\"\r\n        >\r\n          Search\r\n        </button>\r\n      </div>\r\n\r\n      {result !== null && (\r\n        <div className={`text-center mb-4 font-semibold text-lg ${result ? \"text-green-400\" : \"text-red-400\"}`}>\r\n          {result ? \"Word Found!\" : \"Word Not Found!\"}\r\n        </div>\r\n      )}\r\n\r\n      <div className=\"overflow-auto flex justify-center\">{renderTrie(trie.root)}</div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default TrieVisualizer;\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}
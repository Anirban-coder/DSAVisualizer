{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\anirb\\\\Downloads\\\\dsa-visualizer\\\\src\\\\components\\\\TreeVisualizer.jsx\",\n  _s = $RefreshSig$();\nimport React, { useState } from \"react\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction TreeNode(val) {\n  this.val = val;\n  this.left = null;\n  this.right = null;\n}\n_c = TreeNode;\nconst TreeVisualizer = () => {\n  _s();\n  const [root, setRoot] = useState(null);\n  const [value, setValue] = useState(\"\");\n  const [isBST, setIsBST] = useState(true); // Toggle between BST and General Tree\n\n  // Insert for BST\n  const insertBST = (node, val) => {\n    if (!node) return new TreeNode(val);\n    if (val < node.val) {\n      node.left = insertBST(node.left, val);\n    } else {\n      node.right = insertBST(node.right, val);\n    }\n    return node;\n  };\n\n  // Insert for General Binary Tree (level order)\n  const insertGeneral = (node, val) => {\n    if (!node) return new TreeNode(val);\n    const queue = [node];\n    while (queue.length) {\n      const current = queue.shift();\n      if (!current.left) {\n        current.left = new TreeNode(val);\n        break;\n      } else queue.push(current.left);\n      if (!current.right) {\n        current.right = new TreeNode(val);\n        break;\n      } else queue.push(current.right);\n    }\n    return node;\n  };\n  const handleInsert = () => {\n    if (!value) return;\n    const num = parseInt(value);\n    if (isNaN(num)) {\n      alert(\"Please enter a number\");\n      return;\n    }\n    const newRoot = isBST ? insertBST(root, num) : insertGeneral(root, num);\n    setRoot({\n      ...newRoot\n    });\n    setValue(\"\");\n  };\n  const renderTree = node => {\n    if (!node) return null;\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"flex flex-col items-center\",\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"bg-blue-600 text-white px-4 py-2 rounded mb-2\",\n        children: node.val\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 60,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"flex gap-4\",\n        children: [renderTree(node.left), renderTree(node.right)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 61,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 59,\n      columnNumber: 7\n    }, this);\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"bg-gray-800 p-6 rounded shadow-lg w-full max-w-xl text-center text-white\",\n    children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n      className: \"text-2xl font-bold mb-4\",\n      children: \"Binary Tree Visualizer\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 71,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"flex justify-center gap-4 mb-4\",\n      children: [/*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: () => setIsBST(true),\n        className: `px-4 py-2 rounded ${isBST ? \"bg-green-600\" : \"bg-gray-700\"}`,\n        children: \"BST Mode\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 75,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: () => setIsBST(false),\n        className: `px-4 py-2 rounded ${!isBST ? \"bg-green-600\" : \"bg-gray-700\"}`,\n        children: \"General Tree Mode\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 81,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 74,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"flex justify-center items-center gap-2 mb-4\",\n      children: [/*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"text\",\n        value: value,\n        onChange: e => setValue(e.target.value),\n        placeholder: \"Enter value\",\n        className: \"px-2 py-1 rounded text-black\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 91,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: handleInsert,\n        className: \"bg-blue-600 px-4 py-2 rounded hover:bg-blue-700\",\n        children: \"Insert\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 98,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 90,\n      columnNumber: 7\n    }, this), renderTree(root)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 70,\n    columnNumber: 5\n  }, this);\n};\n_s(TreeVisualizer, \"mqCYieZSYjJU9/Hki75IdLFzQgg=\");\n_c2 = TreeVisualizer;\nexport default TreeVisualizer;\nvar _c, _c2;\n$RefreshReg$(_c, \"TreeNode\");\n$RefreshReg$(_c2, \"TreeVisualizer\");","map":{"version":3,"names":["React","useState","jsxDEV","_jsxDEV","TreeNode","val","left","right","_c","TreeVisualizer","_s","root","setRoot","value","setValue","isBST","setIsBST","insertBST","node","insertGeneral","queue","length","current","shift","push","handleInsert","num","parseInt","isNaN","alert","newRoot","renderTree","className","children","fileName","_jsxFileName","lineNumber","columnNumber","onClick","type","onChange","e","target","placeholder","_c2","$RefreshReg$"],"sources":["C:/Users/anirb/Downloads/dsa-visualizer/src/components/TreeVisualizer.jsx"],"sourcesContent":["import React, { useState } from \"react\";\r\n\r\nfunction TreeNode(val) {\r\n  this.val = val;\r\n  this.left = null;\r\n  this.right = null;\r\n}\r\n\r\nconst TreeVisualizer = () => {\r\n  const [root, setRoot] = useState(null);\r\n  const [value, setValue] = useState(\"\");\r\n  const [isBST, setIsBST] = useState(true); // Toggle between BST and General Tree\r\n\r\n  // Insert for BST\r\n  const insertBST = (node, val) => {\r\n    if (!node) return new TreeNode(val);\r\n    if (val < node.val) {\r\n      node.left = insertBST(node.left, val);\r\n    } else {\r\n      node.right = insertBST(node.right, val);\r\n    }\r\n    return node;\r\n  };\r\n\r\n  // Insert for General Binary Tree (level order)\r\n  const insertGeneral = (node, val) => {\r\n    if (!node) return new TreeNode(val);\r\n    const queue = [node];\r\n    while (queue.length) {\r\n      const current = queue.shift();\r\n      if (!current.left) {\r\n        current.left = new TreeNode(val);\r\n        break;\r\n      } else queue.push(current.left);\r\n\r\n      if (!current.right) {\r\n        current.right = new TreeNode(val);\r\n        break;\r\n      } else queue.push(current.right);\r\n    }\r\n    return node;\r\n  };\r\n\r\n  const handleInsert = () => {\r\n    if (!value) return;\r\n    const num = parseInt(value);\r\n    if (isNaN(num)) {\r\n      alert(\"Please enter a number\");\r\n      return;\r\n    }\r\n    const newRoot = isBST ? insertBST(root, num) : insertGeneral(root, num);\r\n    setRoot({ ...newRoot });\r\n    setValue(\"\");\r\n  };\r\n\r\n  const renderTree = (node) => {\r\n    if (!node) return null;\r\n    return (\r\n      <div className=\"flex flex-col items-center\">\r\n        <div className=\"bg-blue-600 text-white px-4 py-2 rounded mb-2\">{node.val}</div>\r\n        <div className=\"flex gap-4\">\r\n          {renderTree(node.left)}\r\n          {renderTree(node.right)}\r\n        </div>\r\n      </div>\r\n    );\r\n  };\r\n\r\n  return (\r\n    <div className=\"bg-gray-800 p-6 rounded shadow-lg w-full max-w-xl text-center text-white\">\r\n      <h2 className=\"text-2xl font-bold mb-4\">Binary Tree Visualizer</h2>\r\n\r\n      {/* Toggle Buttons */}\r\n      <div className=\"flex justify-center gap-4 mb-4\">\r\n        <button\r\n          onClick={() => setIsBST(true)}\r\n          className={`px-4 py-2 rounded ${isBST ? \"bg-green-600\" : \"bg-gray-700\"}`}\r\n        >\r\n          BST Mode\r\n        </button>\r\n        <button\r\n          onClick={() => setIsBST(false)}\r\n          className={`px-4 py-2 rounded ${!isBST ? \"bg-green-600\" : \"bg-gray-700\"}`}\r\n        >\r\n          General Tree Mode\r\n        </button>\r\n      </div>\r\n\r\n      {/* Input + Insert */}\r\n      <div className=\"flex justify-center items-center gap-2 mb-4\">\r\n        <input\r\n          type=\"text\"\r\n          value={value}\r\n          onChange={(e) => setValue(e.target.value)}\r\n          placeholder=\"Enter value\"\r\n          className=\"px-2 py-1 rounded text-black\"\r\n        />\r\n        <button\r\n          onClick={handleInsert}\r\n          className=\"bg-blue-600 px-4 py-2 rounded hover:bg-blue-700\"\r\n        >\r\n          Insert\r\n        </button>\r\n      </div>\r\n\r\n      {/* Tree Rendering */}\r\n      {renderTree(root)}\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default TreeVisualizer;\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}